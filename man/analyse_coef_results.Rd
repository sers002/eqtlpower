% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyse_coefficients.R
\name{analyse_coef_results}
\alias{analyse_coef_results}
\title{Analyse semi-analytic results}
\usage{
analyse_coef_results(
  associations,
  coef_results,
  n_tests = nrow(associations),
  adjust_methods = c("BH"),
  var_y = 1,
  by = NULL,
  threshold = 0.05,
  interval = 0.95,
  type = "eqtl",
  verbose = TRUE
)
}
\arguments{
\item{associations}{A data frame containing the real associations. This
dataset must contain the columns described below (\code{pid}, \code{snp},
 \code{maf}, \code{beta}, and any columns defined in the \code{by} argument)}

\item{coef_results}{A set of results for a given sample size from the
\code{generate_coefficients} function}

\item{n_tests}{The number of tests in the full dataset}

\item{adjust_methods}{The methods to adjust \eqn{p}-values by to account for multiple comparisons. Options include: \code{BH} (Benjamini-Hochberg), \code{BY} (Benjaminiâ€“Yekutieli), \code{bonferroni} (Bonferroni).}

\item{var_y}{The variance of the response}

\item{by}{A set of variable names to aggregate power over}

\item{threshold}{Either a single value (if only one adjustment method is
used) or a named vector giving the thresholds used for significance.}

\item{interval}{Confidence interval level}

\item{type}{Type of power analysis, either \code{"eqtl"} or \code{"gene"}.}

\item{verbose}{If \code{TRUE}, messages will be output during the course of
the function.}
}
\value{
The average statistical power to detect either eQTLs or eGenes using the chosen adjustment methods for each sample size contained in \code{coef_results}.
}
\description{
This function takes the output of \code{\link{generate_coefficients}}
and calculates the average statistical power of either eQTLs
(\code{type = "eqtl"}) or eGenes (\code{type = "gene"}). The statistical
power is averaged within the groups defined by the \code{by} variable.
}
\examples{
\donttest{
data("associations")
data("ld")

sa_coefs <- generate_coefficients(associations.dt, ld.dt)
sa_results <- analyse_coef_results(associations.dt, sa_coefs)
sa_results_genes <- analyse_coef_results(
  associations.dt,
  sa_coefs,
  type = "gene"
)
}
}
